import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import Icon from '@/components/ui/icon';
import { Badge } from '@/components/ui/badge';

interface FeedbackSystemProps {
  stats: {
    correctAnswers: number;
    totalQuestions: number;
    currentStreak: number;
    timeSpent: number;
    adaptiveLevel: 'beginner' | 'intermediate' | 'advanced';
  };
}

const FeedbackSystem = ({ stats }: FeedbackSystemProps) => {
  const accuracy = Math.round((stats.correctAnswers / stats.totalQuestions) * 100) || 0;
  
  const getPerformanceLevel = () => {
    if (accuracy >= 90) return { text: '–û—Ç–ª–∏—á–Ω–æ!', color: 'text-green-600', icon: 'TrophyIcon' };
    if (accuracy >= 70) return { text: '–•–æ—Ä–æ—à–æ!', color: 'text-blue-600', icon: 'ThumbsUp' };
    if (accuracy >= 50) return { text: '–ù–µ–ø–ª–æ—Ö–æ', color: 'text-yellow-600', icon: 'Star' };
    return { text: '–ù—É–∂–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞', color: 'text-orange-600', icon: 'Target' };
  };

  const performance = getPerformanceLevel();

  const getAdaptiveRecommendation = () => {
    if (accuracy >= 85 && stats.currentStreak >= 3) {
      return {
        message: 'üöÄ –¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.',
        action: '–ü–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å',
        color: 'bg-green-50 border-green-200 text-green-800'
      };
    }
    if (accuracy < 50 && stats.totalQuestions >= 5) {
      return {
        message: 'üí° –ö–∞–∂–µ—Ç—Å—è, –º–∞—Ç–µ—Ä–∏–∞–ª –¥–∞—ë—Ç—Å—è —Å–ª–æ–∂–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–µ–æ—Ä–∏–∏ –∏–ª–∏ —Å–Ω–∏–∑–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å.',
        action: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ–æ—Ä–∏—é',
        color: 'bg-orange-50 border-orange-200 text-orange-800'
      };
    }
    return {
      message: 'üëç –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–µ–±–µ.',
      action: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ',
      color: 'bg-blue-50 border-blue-200 text-blue-800'
    };
  };

  const recommendation = getAdaptiveRecommendation();

  return (
    <div className="space-y-4">
      <Card className="border-2">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="BarChart3" size={24} className="text-primary" />
            –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
          </CardTitle>
          <CardDescription>–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div>
            <div className="flex items-center justify-between mb-3">
              <span className="text-sm font-medium">–¢–æ—á–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤</span>
              <span className={`text-2xl font-bold ${performance.color}`}>
                {accuracy}%
              </span>
            </div>
            <Progress value={accuracy} className="h-3 mb-2" />
            <p className={`text-sm font-medium ${performance.color}`}>
              {performance.text}
            </p>
          </div>

          <div className="grid grid-cols-3 gap-3">
            <div className="text-center p-4 bg-gradient-to-br from-green-50 to-green-100 rounded-lg">
              <Icon name="CheckCircle" size={24} className="text-green-600 mx-auto mb-2" />
              <div className="text-2xl font-bold text-green-700">{stats.correctAnswers}</div>
              <div className="text-xs text-green-600">–ü—Ä–∞–≤–∏–ª—å–Ω–æ</div>
            </div>
            <div className="text-center p-4 bg-gradient-to-br from-orange-50 to-orange-100 rounded-lg">
              <Icon name="Flame" size={24} className="text-orange-600 mx-auto mb-2" />
              <div className="text-2xl font-bold text-orange-700">{stats.currentStreak}</div>
              <div className="text-xs text-orange-600">–ü–æ–¥—Ä—è–¥</div>
            </div>
            <div className="text-center p-4 bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg">
              <Icon name="Clock" size={24} className="text-blue-600 mx-auto mb-2" />
              <div className="text-2xl font-bold text-blue-700">{stats.timeSpent}</div>
              <div className="text-xs text-blue-600">–ú–∏–Ω—É—Ç</div>
            </div>
          </div>

          <div className={`p-4 rounded-lg border-2 ${recommendation.color}`}>
            <div className="flex items-start gap-3">
              <Icon name="Lightbulb" size={24} className="flex-shrink-0 mt-1" />
              <div className="space-y-2">
                <p className="font-medium">{recommendation.message}</p>
                <Badge className="bg-primary text-white hover:bg-primary/90">
                  {recommendation.action}
                </Badge>
              </div>
            </div>
          </div>

          <div className="bg-gradient-to-r from-purple-50 to-pink-50 p-4 rounded-lg">
            <h4 className="font-semibold mb-3 flex items-center gap-2">
              <Icon name="TrendingUp" size={20} className="text-purple-600" />
              –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º
            </h4>
            <div className="space-y-2 text-sm">
              <div className="flex items-center justify-between">
                <span>–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å:</span>
                <Badge variant="outline">
                  {stats.adaptiveLevel === 'beginner' && 'üå± –ù–æ–≤–∏—á–æ–∫'}
                  {stats.adaptiveLevel === 'intermediate' && 'üåø –°—Ä–µ–¥–Ω–∏–π'}
                  {stats.adaptiveLevel === 'advanced' && 'üå≥ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'}
                </Badge>
              </div>
              <p className="text-xs text-muted-foreground">
                –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–∏—Ä–∞–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default FeedbackSystem;
